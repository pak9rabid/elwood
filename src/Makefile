# Makefile.in generated by automake 1.10 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/
pkglibdir = $(libdir)/
pkgincludedir = $(includedir)/
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
routerifacebin_PROGRAMS = braddint$(EXEEXT) brcreate$(EXEEXT) \
	brdel$(EXEEXT) dhcpcctrl$(EXEEXT) dhcpdctrl$(EXEEXT) \
	flushchain$(EXEEXT) forwarding$(EXEEXT) gwadd$(EXEEXT) \
	intconfig$(EXEEXT) intdown$(EXEEXT) intup$(EXEEXT) \
	ip_dynaddr_on$(EXEEXT) ip_forward_on$(EXEEXT) \
	masquerade$(EXEEXT) merge_net_configs$(EXEEXT) \
	network$(EXEEXT) routeadd$(EXEEXT) setaccess$(EXEEXT) \
	setfirewall$(EXEEXT) setfirewall2$(EXEEXT) setpolicy$(EXEEXT) \
	setpforwarding$(EXEEXT) show_dhcpd_pid$(EXEEXT) \
	show_iwconfig$(EXEEXT) show_input_table$(EXEEXT) \
	show_output_table$(EXEEXT) show_forward_table$(EXEEXT) \
	show_forward_table_2$(EXEEXT) show_port_forwarding$(EXEEXT) \
	user_htpasswd$(EXEEXT)
ipmaskbin_PROGRAMS = ipmask$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(ipmaskbindir)" \
	"$(DESTDIR)$(routerifacebindir)"
ipmaskbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
routerifacebinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(ipmaskbin_PROGRAMS) $(routerifacebin_PROGRAMS)
am_braddint_OBJECTS = braddint.$(OBJEXT)
braddint_OBJECTS = $(am_braddint_OBJECTS)
braddint_LDADD = $(LDADD)
am_brcreate_OBJECTS = brcreate.$(OBJEXT)
brcreate_OBJECTS = $(am_brcreate_OBJECTS)
brcreate_LDADD = $(LDADD)
am_brdel_OBJECTS = brdel.$(OBJEXT)
brdel_OBJECTS = $(am_brdel_OBJECTS)
brdel_LDADD = $(LDADD)
am_dhcpcctrl_OBJECTS = dhcpcctrl.$(OBJEXT)
dhcpcctrl_OBJECTS = $(am_dhcpcctrl_OBJECTS)
dhcpcctrl_LDADD = $(LDADD)
am_dhcpdctrl_OBJECTS = dhcpdctrl.$(OBJEXT)
dhcpdctrl_OBJECTS = $(am_dhcpdctrl_OBJECTS)
dhcpdctrl_LDADD = $(LDADD)
am_flushchain_OBJECTS = flushchain.$(OBJEXT)
flushchain_OBJECTS = $(am_flushchain_OBJECTS)
flushchain_LDADD = $(LDADD)
am_forwarding_OBJECTS = forwarding.$(OBJEXT)
forwarding_OBJECTS = $(am_forwarding_OBJECTS)
forwarding_LDADD = $(LDADD)
am_gwadd_OBJECTS = gwadd.$(OBJEXT)
gwadd_OBJECTS = $(am_gwadd_OBJECTS)
gwadd_LDADD = $(LDADD)
am_intconfig_OBJECTS = intconfig.$(OBJEXT)
intconfig_OBJECTS = $(am_intconfig_OBJECTS)
intconfig_LDADD = $(LDADD)
am_intdown_OBJECTS = intdown.$(OBJEXT)
intdown_OBJECTS = $(am_intdown_OBJECTS)
intdown_LDADD = $(LDADD)
am_intup_OBJECTS = intup.$(OBJEXT)
intup_OBJECTS = $(am_intup_OBJECTS)
intup_LDADD = $(LDADD)
am_ip_dynaddr_on_OBJECTS = ip_dynaddr_on.$(OBJEXT)
ip_dynaddr_on_OBJECTS = $(am_ip_dynaddr_on_OBJECTS)
ip_dynaddr_on_LDADD = $(LDADD)
am_ip_forward_on_OBJECTS = ip_forward_on.$(OBJEXT)
ip_forward_on_OBJECTS = $(am_ip_forward_on_OBJECTS)
ip_forward_on_LDADD = $(LDADD)
ipmask_SOURCES = ipmask.c
ipmask_OBJECTS = ipmask.$(OBJEXT)
ipmask_LDADD = $(LDADD)
am_masquerade_OBJECTS = masquerade.$(OBJEXT)
masquerade_OBJECTS = $(am_masquerade_OBJECTS)
masquerade_LDADD = $(LDADD)
am_merge_net_configs_OBJECTS = merge_net_configs.$(OBJEXT)
merge_net_configs_OBJECTS = $(am_merge_net_configs_OBJECTS)
merge_net_configs_LDADD = $(LDADD)
am_network_OBJECTS = network.$(OBJEXT)
network_OBJECTS = $(am_network_OBJECTS)
network_LDADD = $(LDADD)
am_routeadd_OBJECTS = routeadd.$(OBJEXT)
routeadd_OBJECTS = $(am_routeadd_OBJECTS)
routeadd_LDADD = $(LDADD)
am_setaccess_OBJECTS = setaccess.$(OBJEXT)
setaccess_OBJECTS = $(am_setaccess_OBJECTS)
setaccess_LDADD = $(LDADD)
am_setfirewall_OBJECTS = setfirewall.$(OBJEXT)
setfirewall_OBJECTS = $(am_setfirewall_OBJECTS)
setfirewall_LDADD = $(LDADD)
am_setfirewall2_OBJECTS = setfirewall2.$(OBJEXT)
setfirewall2_OBJECTS = $(am_setfirewall2_OBJECTS)
setfirewall2_LDADD = $(LDADD)
am_setpforwarding_OBJECTS = setpforwarding.$(OBJEXT)
setpforwarding_OBJECTS = $(am_setpforwarding_OBJECTS)
setpforwarding_LDADD = $(LDADD)
am_setpolicy_OBJECTS = setpolicy.$(OBJEXT)
setpolicy_OBJECTS = $(am_setpolicy_OBJECTS)
setpolicy_LDADD = $(LDADD)
am_show_dhcpd_pid_OBJECTS = show_dhcpd_pid.$(OBJEXT)
show_dhcpd_pid_OBJECTS = $(am_show_dhcpd_pid_OBJECTS)
show_dhcpd_pid_LDADD = $(LDADD)
am_show_forward_table_OBJECTS = show_forward_table.$(OBJEXT)
show_forward_table_OBJECTS = $(am_show_forward_table_OBJECTS)
show_forward_table_LDADD = $(LDADD)
am_show_forward_table_2_OBJECTS = show_forward_table_2.$(OBJEXT)
show_forward_table_2_OBJECTS = $(am_show_forward_table_2_OBJECTS)
show_forward_table_2_LDADD = $(LDADD)
am_show_input_table_OBJECTS = show_input_table.$(OBJEXT)
show_input_table_OBJECTS = $(am_show_input_table_OBJECTS)
show_input_table_LDADD = $(LDADD)
am_show_iwconfig_OBJECTS = show_iwconfig.$(OBJEXT)
show_iwconfig_OBJECTS = $(am_show_iwconfig_OBJECTS)
show_iwconfig_LDADD = $(LDADD)
am_show_output_table_OBJECTS = show_output_table.$(OBJEXT)
show_output_table_OBJECTS = $(am_show_output_table_OBJECTS)
show_output_table_LDADD = $(LDADD)
am_show_port_forwarding_OBJECTS = show_port_forwarding.$(OBJEXT)
show_port_forwarding_OBJECTS = $(am_show_port_forwarding_OBJECTS)
show_port_forwarding_LDADD = $(LDADD)
am_user_htpasswd_OBJECTS = user_htpasswd.$(OBJEXT) webusers.$(OBJEXT)
user_htpasswd_OBJECTS = $(am_user_htpasswd_OBJECTS)
user_htpasswd_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(braddint_SOURCES) $(brcreate_SOURCES) $(brdel_SOURCES) \
	$(dhcpcctrl_SOURCES) $(dhcpdctrl_SOURCES) \
	$(flushchain_SOURCES) $(forwarding_SOURCES) $(gwadd_SOURCES) \
	$(intconfig_SOURCES) $(intdown_SOURCES) $(intup_SOURCES) \
	$(ip_dynaddr_on_SOURCES) $(ip_forward_on_SOURCES) ipmask.c \
	$(masquerade_SOURCES) $(merge_net_configs_SOURCES) \
	$(network_SOURCES) $(routeadd_SOURCES) $(setaccess_SOURCES) \
	$(setfirewall_SOURCES) $(setfirewall2_SOURCES) \
	$(setpforwarding_SOURCES) $(setpolicy_SOURCES) \
	$(show_dhcpd_pid_SOURCES) $(show_forward_table_SOURCES) \
	$(show_forward_table_2_SOURCES) $(show_input_table_SOURCES) \
	$(show_iwconfig_SOURCES) $(show_output_table_SOURCES) \
	$(show_port_forwarding_SOURCES) $(user_htpasswd_SOURCES)
DIST_SOURCES = $(braddint_SOURCES) $(brcreate_SOURCES) \
	$(brdel_SOURCES) $(dhcpcctrl_SOURCES) $(dhcpdctrl_SOURCES) \
	$(flushchain_SOURCES) $(forwarding_SOURCES) $(gwadd_SOURCES) \
	$(intconfig_SOURCES) $(intdown_SOURCES) $(intup_SOURCES) \
	$(ip_dynaddr_on_SOURCES) $(ip_forward_on_SOURCES) ipmask.c \
	$(masquerade_SOURCES) $(merge_net_configs_SOURCES) \
	$(network_SOURCES) $(routeadd_SOURCES) $(setaccess_SOURCES) \
	$(setfirewall_SOURCES) $(setfirewall2_SOURCES) \
	$(setpforwarding_SOURCES) $(setpolicy_SOURCES) \
	$(show_dhcpd_pid_SOURCES) $(show_forward_table_SOURCES) \
	$(show_forward_table_2_SOURCES) $(show_input_table_SOURCES) \
	$(show_iwconfig_SOURCES) $(show_output_table_SOURCES) \
	$(show_port_forwarding_SOURCES) $(user_htpasswd_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/svn_projects/elwood-r32/missing --run aclocal-1.10
AMTAR = ${SHELL} /root/svn_projects/elwood-r32/missing --run tar
AUTOCONF = ${SHELL} /root/svn_projects/elwood-r32/missing --run autoconf
AUTOHEADER = ${SHELL} /root/svn_projects/elwood-r32/missing --run autoheader
AUTOMAKE = ${SHELL} /root/svn_projects/elwood-r32/missing --run automake-1.10
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\$$PACKAGE\" -DPACKAGE_TARNAME=\"-package\" -DPACKAGE_VERSION=\"\$$VERSION\" -DPACKAGE_STRING=\"\$$PACKAGE\ \$$VERSION\" -DPACKAGE_BUGREPORT=\"pak9rabid@yahoo.com\" -DPACKAGE=\"\" -DVERSION=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_UNISTD_H=1 -DHAVE__BOOL=1 -DHAVE_STDBOOL_H=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
IFCONIFG = yes
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IPTABLES = yes
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /root/svn_projects/elwood-r32/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = 
PACKAGE_BUGREPORT = pak9rabid@yahoo.com
PACKAGE_NAME = $PACKAGE
PACKAGE_STRING = $PACKAGE $VERSION
PACKAGE_TARNAME = -package
PACKAGE_VERSION = $VERSION
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
SUDO = yes
VERSION = 
WOL = yes
abs_builddir = /root/svn_projects/elwood-r32/src
abs_srcdir = /root/svn_projects/elwood-r32/src
abs_top_builddir = /root/svn_projects/elwood-r32
abs_top_srcdir = /root/svn_projects/elwood-r32
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /root/svn_projects/elwood-r32/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
routerifacebindir = /var/www/bin
braddint_SOURCES = braddint.c
brcreate_SOURCES = brcreate.c
brdel_SOURCES = brdel.c
dhcpcctrl_SOURCES = dhcpcctrl.c
dhcpdctrl_SOURCES = dhcpdctrl.c
flushchain_SOURCES = flushchain.c
forwarding_SOURCES = forwarding.c
gwadd_SOURCES = gwadd.c
intconfig_SOURCES = intconfig.c
intdown_SOURCES = intdown.c
intup_SOURCES = intup.c
ip_dynaddr_on_SOURCES = ip_dynaddr_on.c
ip_forward_on_SOURCES = ip_forward_on.c
masquerade_SOURCES = masquerade.c
merge_net_configs_SOURCES = merge_net_configs.cpp
network_SOURCES = network.c
routeadd_SOURCES = routeadd.c
setaccess_SOURCES = setaccess.c
setfirewall_SOURCES = setfirewall.c
setfirewall2_SOURCES = setfirewall2.c
setpolicy_SOURCES = setpolicy.c
setpforwarding_SOURCES = setpforwarding.c
show_dhcpd_pid_SOURCES = show_dhcpd_pid.c
show_iwconfig_SOURCES = show_iwconfig.c
show_input_table_SOURCES = show_input_table.c
show_output_table_SOURCES = show_output_table.c
show_forward_table_SOURCES = show_forward_table.c
show_forward_table_2_SOURCES = show_forward_table_2.c
show_port_forwarding_SOURCES = show_port_forwarding.c
user_htpasswd_SOURCES = user_htpasswd.cpp webusers.cpp
ipmaskbindir = /bin
ipmaskbin_SOURCES = ipmask.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-ipmaskbinPROGRAMS: $(ipmaskbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(ipmaskbindir)" || $(MKDIR_P) "$(DESTDIR)$(ipmaskbindir)"
	@list='$(ipmaskbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(ipmaskbinPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(ipmaskbindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(ipmaskbinPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(ipmaskbindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-ipmaskbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(ipmaskbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(ipmaskbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(ipmaskbindir)/$$f"; \
	done

clean-ipmaskbinPROGRAMS:
	-test -z "$(ipmaskbin_PROGRAMS)" || rm -f $(ipmaskbin_PROGRAMS)
install-routerifacebinPROGRAMS: $(routerifacebin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(routerifacebindir)" || $(MKDIR_P) "$(DESTDIR)$(routerifacebindir)"
	@list='$(routerifacebin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(routerifacebinPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(routerifacebindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(routerifacebinPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(routerifacebindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-routerifacebinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(routerifacebin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(routerifacebindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(routerifacebindir)/$$f"; \
	done

clean-routerifacebinPROGRAMS:
	-test -z "$(routerifacebin_PROGRAMS)" || rm -f $(routerifacebin_PROGRAMS)
braddint$(EXEEXT): $(braddint_OBJECTS) $(braddint_DEPENDENCIES) 
	@rm -f braddint$(EXEEXT)
	$(LINK) $(braddint_OBJECTS) $(braddint_LDADD) $(LIBS)
brcreate$(EXEEXT): $(brcreate_OBJECTS) $(brcreate_DEPENDENCIES) 
	@rm -f brcreate$(EXEEXT)
	$(LINK) $(brcreate_OBJECTS) $(brcreate_LDADD) $(LIBS)
brdel$(EXEEXT): $(brdel_OBJECTS) $(brdel_DEPENDENCIES) 
	@rm -f brdel$(EXEEXT)
	$(LINK) $(brdel_OBJECTS) $(brdel_LDADD) $(LIBS)
dhcpcctrl$(EXEEXT): $(dhcpcctrl_OBJECTS) $(dhcpcctrl_DEPENDENCIES) 
	@rm -f dhcpcctrl$(EXEEXT)
	$(LINK) $(dhcpcctrl_OBJECTS) $(dhcpcctrl_LDADD) $(LIBS)
dhcpdctrl$(EXEEXT): $(dhcpdctrl_OBJECTS) $(dhcpdctrl_DEPENDENCIES) 
	@rm -f dhcpdctrl$(EXEEXT)
	$(LINK) $(dhcpdctrl_OBJECTS) $(dhcpdctrl_LDADD) $(LIBS)
flushchain$(EXEEXT): $(flushchain_OBJECTS) $(flushchain_DEPENDENCIES) 
	@rm -f flushchain$(EXEEXT)
	$(LINK) $(flushchain_OBJECTS) $(flushchain_LDADD) $(LIBS)
forwarding$(EXEEXT): $(forwarding_OBJECTS) $(forwarding_DEPENDENCIES) 
	@rm -f forwarding$(EXEEXT)
	$(LINK) $(forwarding_OBJECTS) $(forwarding_LDADD) $(LIBS)
gwadd$(EXEEXT): $(gwadd_OBJECTS) $(gwadd_DEPENDENCIES) 
	@rm -f gwadd$(EXEEXT)
	$(LINK) $(gwadd_OBJECTS) $(gwadd_LDADD) $(LIBS)
intconfig$(EXEEXT): $(intconfig_OBJECTS) $(intconfig_DEPENDENCIES) 
	@rm -f intconfig$(EXEEXT)
	$(LINK) $(intconfig_OBJECTS) $(intconfig_LDADD) $(LIBS)
intdown$(EXEEXT): $(intdown_OBJECTS) $(intdown_DEPENDENCIES) 
	@rm -f intdown$(EXEEXT)
	$(LINK) $(intdown_OBJECTS) $(intdown_LDADD) $(LIBS)
intup$(EXEEXT): $(intup_OBJECTS) $(intup_DEPENDENCIES) 
	@rm -f intup$(EXEEXT)
	$(LINK) $(intup_OBJECTS) $(intup_LDADD) $(LIBS)
ip_dynaddr_on$(EXEEXT): $(ip_dynaddr_on_OBJECTS) $(ip_dynaddr_on_DEPENDENCIES) 
	@rm -f ip_dynaddr_on$(EXEEXT)
	$(LINK) $(ip_dynaddr_on_OBJECTS) $(ip_dynaddr_on_LDADD) $(LIBS)
ip_forward_on$(EXEEXT): $(ip_forward_on_OBJECTS) $(ip_forward_on_DEPENDENCIES) 
	@rm -f ip_forward_on$(EXEEXT)
	$(LINK) $(ip_forward_on_OBJECTS) $(ip_forward_on_LDADD) $(LIBS)
ipmask$(EXEEXT): $(ipmask_OBJECTS) $(ipmask_DEPENDENCIES) 
	@rm -f ipmask$(EXEEXT)
	$(LINK) $(ipmask_OBJECTS) $(ipmask_LDADD) $(LIBS)
masquerade$(EXEEXT): $(masquerade_OBJECTS) $(masquerade_DEPENDENCIES) 
	@rm -f masquerade$(EXEEXT)
	$(LINK) $(masquerade_OBJECTS) $(masquerade_LDADD) $(LIBS)
merge_net_configs$(EXEEXT): $(merge_net_configs_OBJECTS) $(merge_net_configs_DEPENDENCIES) 
	@rm -f merge_net_configs$(EXEEXT)
	$(CXXLINK) $(merge_net_configs_OBJECTS) $(merge_net_configs_LDADD) $(LIBS)
network$(EXEEXT): $(network_OBJECTS) $(network_DEPENDENCIES) 
	@rm -f network$(EXEEXT)
	$(LINK) $(network_OBJECTS) $(network_LDADD) $(LIBS)
routeadd$(EXEEXT): $(routeadd_OBJECTS) $(routeadd_DEPENDENCIES) 
	@rm -f routeadd$(EXEEXT)
	$(LINK) $(routeadd_OBJECTS) $(routeadd_LDADD) $(LIBS)
setaccess$(EXEEXT): $(setaccess_OBJECTS) $(setaccess_DEPENDENCIES) 
	@rm -f setaccess$(EXEEXT)
	$(LINK) $(setaccess_OBJECTS) $(setaccess_LDADD) $(LIBS)
setfirewall$(EXEEXT): $(setfirewall_OBJECTS) $(setfirewall_DEPENDENCIES) 
	@rm -f setfirewall$(EXEEXT)
	$(LINK) $(setfirewall_OBJECTS) $(setfirewall_LDADD) $(LIBS)
setfirewall2$(EXEEXT): $(setfirewall2_OBJECTS) $(setfirewall2_DEPENDENCIES) 
	@rm -f setfirewall2$(EXEEXT)
	$(LINK) $(setfirewall2_OBJECTS) $(setfirewall2_LDADD) $(LIBS)
setpforwarding$(EXEEXT): $(setpforwarding_OBJECTS) $(setpforwarding_DEPENDENCIES) 
	@rm -f setpforwarding$(EXEEXT)
	$(LINK) $(setpforwarding_OBJECTS) $(setpforwarding_LDADD) $(LIBS)
setpolicy$(EXEEXT): $(setpolicy_OBJECTS) $(setpolicy_DEPENDENCIES) 
	@rm -f setpolicy$(EXEEXT)
	$(LINK) $(setpolicy_OBJECTS) $(setpolicy_LDADD) $(LIBS)
show_dhcpd_pid$(EXEEXT): $(show_dhcpd_pid_OBJECTS) $(show_dhcpd_pid_DEPENDENCIES) 
	@rm -f show_dhcpd_pid$(EXEEXT)
	$(LINK) $(show_dhcpd_pid_OBJECTS) $(show_dhcpd_pid_LDADD) $(LIBS)
show_forward_table$(EXEEXT): $(show_forward_table_OBJECTS) $(show_forward_table_DEPENDENCIES) 
	@rm -f show_forward_table$(EXEEXT)
	$(LINK) $(show_forward_table_OBJECTS) $(show_forward_table_LDADD) $(LIBS)
show_forward_table_2$(EXEEXT): $(show_forward_table_2_OBJECTS) $(show_forward_table_2_DEPENDENCIES) 
	@rm -f show_forward_table_2$(EXEEXT)
	$(LINK) $(show_forward_table_2_OBJECTS) $(show_forward_table_2_LDADD) $(LIBS)
show_input_table$(EXEEXT): $(show_input_table_OBJECTS) $(show_input_table_DEPENDENCIES) 
	@rm -f show_input_table$(EXEEXT)
	$(LINK) $(show_input_table_OBJECTS) $(show_input_table_LDADD) $(LIBS)
show_iwconfig$(EXEEXT): $(show_iwconfig_OBJECTS) $(show_iwconfig_DEPENDENCIES) 
	@rm -f show_iwconfig$(EXEEXT)
	$(LINK) $(show_iwconfig_OBJECTS) $(show_iwconfig_LDADD) $(LIBS)
show_output_table$(EXEEXT): $(show_output_table_OBJECTS) $(show_output_table_DEPENDENCIES) 
	@rm -f show_output_table$(EXEEXT)
	$(LINK) $(show_output_table_OBJECTS) $(show_output_table_LDADD) $(LIBS)
show_port_forwarding$(EXEEXT): $(show_port_forwarding_OBJECTS) $(show_port_forwarding_DEPENDENCIES) 
	@rm -f show_port_forwarding$(EXEEXT)
	$(LINK) $(show_port_forwarding_OBJECTS) $(show_port_forwarding_LDADD) $(LIBS)
user_htpasswd$(EXEEXT): $(user_htpasswd_OBJECTS) $(user_htpasswd_DEPENDENCIES) 
	@rm -f user_htpasswd$(EXEEXT)
	$(CXXLINK) $(user_htpasswd_OBJECTS) $(user_htpasswd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/braddint.Po
include ./$(DEPDIR)/brcreate.Po
include ./$(DEPDIR)/brdel.Po
include ./$(DEPDIR)/dhcpcctrl.Po
include ./$(DEPDIR)/dhcpdctrl.Po
include ./$(DEPDIR)/flushchain.Po
include ./$(DEPDIR)/forwarding.Po
include ./$(DEPDIR)/gwadd.Po
include ./$(DEPDIR)/intconfig.Po
include ./$(DEPDIR)/intdown.Po
include ./$(DEPDIR)/intup.Po
include ./$(DEPDIR)/ip_dynaddr_on.Po
include ./$(DEPDIR)/ip_forward_on.Po
include ./$(DEPDIR)/ipmask.Po
include ./$(DEPDIR)/masquerade.Po
include ./$(DEPDIR)/merge_net_configs.Po
include ./$(DEPDIR)/network.Po
include ./$(DEPDIR)/routeadd.Po
include ./$(DEPDIR)/setaccess.Po
include ./$(DEPDIR)/setfirewall.Po
include ./$(DEPDIR)/setfirewall2.Po
include ./$(DEPDIR)/setpforwarding.Po
include ./$(DEPDIR)/setpolicy.Po
include ./$(DEPDIR)/show_dhcpd_pid.Po
include ./$(DEPDIR)/show_forward_table.Po
include ./$(DEPDIR)/show_forward_table_2.Po
include ./$(DEPDIR)/show_input_table.Po
include ./$(DEPDIR)/show_iwconfig.Po
include ./$(DEPDIR)/show_output_table.Po
include ./$(DEPDIR)/show_port_forwarding.Po
include ./$(DEPDIR)/user_htpasswd.Po
include ./$(DEPDIR)/webusers.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(ipmaskbindir)" "$(DESTDIR)$(routerifacebindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-ipmaskbinPROGRAMS \
	clean-routerifacebinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-ipmaskbinPROGRAMS \
	install-routerifacebinPROGRAMS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-ipmaskbinPROGRAMS \
	uninstall-routerifacebinPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-ipmaskbinPROGRAMS clean-routerifacebinPROGRAMS ctags \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-ipmaskbinPROGRAMS install-man install-pdf \
	install-pdf-am install-ps install-ps-am \
	install-routerifacebinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-ipmaskbinPROGRAMS \
	uninstall-routerifacebinPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
